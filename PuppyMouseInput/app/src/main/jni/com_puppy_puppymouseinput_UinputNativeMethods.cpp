/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
#include <stdlib.h>
#include "include/uinput.h"
/* Header for class com_puppy_puppymouseinput_UinputNativeMethods */
#include "suinput.h"
#include "log.h"
#ifndef _Included_com_puppy_puppymouseinput_UinputNativeMethods
#define _Included_com_puppy_puppymouseinput_UinputNativeMethods
#ifdef __cplusplus
extern "C" {
#endif
int uinput_fd = -1;


char* device_name = "uinputdemo";
/*
 * Class:     com_puppy_puppymouseinput_UinputNativeMethods
 * Method:    registerDevice
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_puppy_puppymouseinput_UinputNativeMethods_registerDevice
  (JNIEnv *env, jobject obj){
    struct input_id id = {BUS_VIRTUAL, 1, 1, 1 };

    system("su -c \"chmod 0666 /dev/uinput\"");

    uinput_fd = suinput_open(device_name, &id);
    LOGV("suinput_open(%s,&id) = %d",device_name,uinput_fd);

    return uinput_fd > 0 ? JNI_TRUE : JNI_FALSE;
}

/*
 * Class:     com_puppy_puppymouseinput_UinputNativeMethods
 * Method:    unregisterDevice
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_puppy_puppymouseinput_UinputNativeMethods_unregisterDevice
  (JNIEnv *env, jobject obj){
    int retval = suinput_close(uinput_fd);

    system("su -c \"chmod 0660 /dev/uinput\"");

    LOGV("suinput_close(%d) = %d", uinput_fd, retval);
    uinput_fd = -1;

    return retval == 0 ? JNI_TRUE : JNI_FALSE;
}

/*
 * Class:     com_puppy_puppymouseinput_UinputNativeMethods
 * Method:    handleMouseEvent
 * Signature: (IIIII)Z
 */
JNIEXPORT jboolean JNICALL Java_com_puppy_puppymouseinput_UinputNativeMethods_handleMouseEvent
        (JNIEnv *env, jobject obj, jint type, jint x, jint y, jint keycode, jint keystatus){
    int retval = -1;
    mouse_event mouseEvent;
    mouseEvent.type = type;
    mouseEvent.x = x;
    mouseEvent.y = y;
    mouseEvent.key_code = keycode;
    mouseEvent.key_status = keystatus;
    retval = handle_mouse_event(&mouseEvent);
    LOGV("handle_mouse_event(%d,%d,%d,%d,%d) = %d", type, x, y, keycode, keystatus, retval);

    return retval == 0 ? JNI_TRUE : JNI_FALSE;
}

/*
 * Class:     com_puppy_puppymouseinput_UinputNativeMethods
 * Method:    setPointer
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_puppy_puppymouseinput_UinputNativeMethods_setPointer
        (JNIEnv *env, jobject obj, jint x, jint y){
    int retval = -1;
    retval = suinput_set_pointer(x, y);
    LOGV("suinput_set_pointer(%d,%d) = %d",x, y, retval);
    return retval == 0 ? JNI_TRUE : JNI_FALSE;
}

#ifdef __cplusplus
}
#endif
#endif
